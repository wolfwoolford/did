#!/bin/bash

did_dir="$HOME/.did"
did_history_log=did_history

function did_log_command()
{
    local status=$?
    local command=$(history +1)
    if [[ ! -n "$command" ]]; then return; fi
    
    if echo $(pwd) | grep ^$did_dir 2>&1 > /dev/null; then
        # don't store history of the history directory itself
        return
    fi

    local outdir="$did_dir$(pwd)"
    mkdir -p "$outdir"
   
    local history_file="$outdir/$did_history_log"
    
    
    if [[ -s "$history_file" ]]; then
        local command_id=$(echo $command | awk '{print $1}')
        local prev_id=$(tail -n 1 "$history_file" | awk '{print $1}')
        # repeated/same command
        if [[ $command_id -eq $prev_id ]]; then
            return;
        fi
    fi 

    echo "$command $(date +%Y%m%d_%H:%M:%S) $status" >> "$history_file"
}

# what i did in this directory
function did()
{
    local outdir="$did_dir$(pwd)"
    [ ! -d "$outdir"  ] && mkdir -p "$outdir"  # This takes care of a corner case where did is the first command run in a new directory
    local history_file="$outdir/$did_history_log"
    if [[ -s "$history_file" ]]; then
        cat "$history_file"
    fi
}


# If the user hasn't specified the PROMPT_COMMAND then set it up
# otherwise we'll assume they know what they are doing 
# and will add did_log_command manually to their custom PROMPT_COMMAND
if  [[ -z ${PROMPT_COMMAND} ]]; then
    export PROMPT_COMMAND=did_log_command
fi

